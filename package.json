{
  "devDependencies": {
    "electron": "^1.6.0",
    "electron-builder": "^13.10.1"
  },
  "build": {
    "appId": "com.tomaszczart.desktoptvremote",
    "mac": {
      "category": "public.app-category.utilities",
      "dmg": {
        "contents": [
          {
            "x": 110,
            "y": 150
          },
          {
            "x": 240,
            "y": 150,
            "type": "link",
            "path": "/Applications"
          }
        ]
      }
    },
    "win": {
      "publisherName": "Tomasz Czart",
      "iconUrl": "https://raw.githubusercontent.com/tomaszczart/DesktopTVRemote/master/build/icon.ico",
      "certificateFile": "./certs/signing_key.pfx",
      "certificatePassword": "password",
      "remoteReleases": true,
      "target": "nsis",
      "oneClick": false,
      "allowToChangeInstallationDirectory": true,
      "perMachine": true
    }
  },
  "scripts": {
    "start": "electron ./app",
    "dist": "build --win --x64 --ia32",
    "prerelease:osx": "rm -rf release/osx && mkdirp release/osx",
    "release:osx": "cp -rv dist/osx/*.{dmg,zip} release/osx && PACKAGE_VERSION=$(cat app/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && echo $PACKAGE_VERSION >> ./release/osx/VERSION",
    "prerelease:win32": "rm -rf release/win32 && mkdirp release/win32",
    "release:win32": "cp -v dist/win-ia32/{RELEASES,*.nupkg,*.exe} release/win32",
    "prerelease:win64": "rm -rf release/win64 && mkdirp release/win64",
    "release:win64": "cp -v dist/win/{RELEASES,*.nupkg,*.exe} release/win64",
    "release": "npm run release:osx && npm run release:win32 && npm run release:win64",
    "deploy": "PACKAGE_VERSION=$(cat app/package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]') && aws s3 sync release/ http://dtvr-update.azurewebsites.net/updates/$PACKAGE_VERSION/ --acl public-read && aws s3 sync http://dtvr-update.azurewebsites.net/updates/$PACKAGE_VERSION/ http://dtvr-update.azurewebsites.net/updates/latest/ --delete --acl public-read",
    "all": "npm run dist && npm run release && npm run deploy"
  }
}